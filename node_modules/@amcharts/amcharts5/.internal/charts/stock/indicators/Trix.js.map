{"version":3,"file":"Trix.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/indicators/Trix.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nexport interface ITrixSettings extends IChartIndicatorSettings {\r\n\t/**\r\n\t * Signal color.\r\n\t */\r\n\tsignalColor?: Color;\r\n\t\r\n\t/**\r\n\t * A value for \"signal\" period.\r\n\t */\r\n\tsignalPeriod?: number;\t\r\n}\r\n\r\nexport interface ITrixPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface ITrixEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class Trix extends ChartIndicator {\r\n\tpublic static className: string = \"Trix\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([Trix.className]);\r\n\r\n\tdeclare public _settings: ITrixSettings;\r\n\tdeclare public _privateSettings: ITrixPrivate;\r\n\tdeclare public _events: ITrixEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series for the signal.\r\n\t */\r\n\tpublic signalSeries!: LineSeries;\t\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t},{\r\n\t\tkey: \"signalPeriod\",\r\n\t\tname: this.root.language.translateAny(\"Signal period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"signalColor\",\r\n\t\tname: this.root.language.translateAny(\"Signal color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tprotected _themeTag: string = \"trix\";\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"trix\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst chart = this.panel;\r\n\r\n\t\tif (chart) {\r\n\r\n\t\t\tconst signalSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"signal\",\r\n\t\t\t\txAxis: this.xAxis,\r\n\t\t\t\tyAxis: this.yAxis,\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tthemeTags: [\"indicator\", \"signal\"]\r\n\t\t\t}))\r\n\r\n\t\t\tthis.signalSeries = signalSeries;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"signalPeriod\")) {\r\n\t\t\tthis._dataDirty = true;\r\n\t\t\tthis.setCustomData(\"signalPeriod\", this.get(\"signalPeriod\"));\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\t\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"signalColor\")) {\r\n\t\t\tthis._updateSeriesColor(this.signalSeries, this.get(\"signalColor\"), \"signalColor\");\r\n\t\t}\r\n\r\n\t\tconst dataItem = this.series.dataItem;\r\n\t\tif (dataItem) {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tdataContext.signalPeriod = this.get(\"signalPeriod\");\r\n\t\t\t\tconst signalColor = this.get(\"signalColor\");\r\n\t\t\t\tif (signalColor) {\r\n\t\t\t\t\tdataContext.signalColor = signalColor.toCSSHex();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tsuper.prepareData();\r\n\r\n\t\tif (this.series) {\r\n\r\n\t\t\tlet period = this.get(\"period\", 14);\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\r\n\t\t\tthis._ema(data, period, \"value_y\", \"ema\");\r\n\t\t\tthis._ema(data, period, \"ema\", \"ema2\");\r\n\t\t\tthis._ema(data, period, \"ema2\", \"ema3\");\r\n\r\n\t\t\tlet previousDataItem: any;\r\n\t\t\tlet previousValue: number;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.ema3;\r\n\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\tpreviousValue = previousDataItem.ema3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($type.isNumber(value) && $type.isNumber(previousValue)) {\r\n\t\t\t\t\tdataItem.trix = 100 * (value - previousValue) / previousValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t})\r\n\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\r\n\r\n\t\t\tperiod = this.get(\"signalPeriod\", 9);\r\n\t\t\tthis._sma(data, period, \"trix\", \"signal\");\r\n\r\n\t\t\tthis.signalSeries.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}"]}