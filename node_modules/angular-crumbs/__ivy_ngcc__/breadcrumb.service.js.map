{"version":3,"file":"breadcrumb.service.js","sources":["../src/breadcrumb.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, Event, NavigationEnd } from '@angular/router';\r\n\r\nimport { Breadcrumb } from './breadcrumb';\r\n\r\n\r\nexport class BreadcrumbService {\r\n    breadcrumbChanged = new EventEmitter<Breadcrumb[]>(false);\r\n\r\n    private breadcrumbs = new Array<Breadcrumb>();\r\n\r\n    constructor(private router: Router) {\r\n        this.router.events.subscribe((routeEvent) => { this.onRouteEvent(routeEvent); });\r\n    }\r\n\r\n    public changeBreadcrumb(route: ActivatedRouteSnapshot, name: string) {\r\n        const rootUrl = this.createRootUrl(route);\r\n        const breadcrumb = this.breadcrumbs.find(function (bc) { return bc.url === rootUrl; });\r\n\r\n        if (!breadcrumb) { return; }\r\n\r\n        breadcrumb.displayName = name;\r\n\r\n        this.breadcrumbChanged.emit(this.breadcrumbs);\r\n    }\r\n\r\n    private onRouteEvent(routeEvent: Event) {\r\n        if (!(routeEvent instanceof NavigationEnd)) { return; }\r\n\r\n        let route = this.router.routerState.root.snapshot;\r\n        let url = '';\r\n\r\n        var breadCrumbIndex = 0;\r\n        var newCrumbs = [];\r\n\r\n        while (route.firstChild != null) {\r\n            route = route.firstChild;\r\n\r\n            if (route.routeConfig === null) { continue; }\r\n            if (!route.routeConfig.path) { continue; }\r\n\r\n            url += `/${this.createUrl(route)}`;\r\n\r\n            if (!route.data['breadcrumb']) { continue; }\r\n\r\n            var newCrumb = this.createBreadcrumb(route, url)\r\n\r\n            if (breadCrumbIndex < this.breadcrumbs.length) {\r\n              var existing = this.breadcrumbs[breadCrumbIndex++];\r\n\r\n              if (existing && existing.route == route.routeConfig) {\r\n                newCrumb.displayName = existing.displayName;\r\n              }\r\n            }\r\n\r\n            newCrumbs.push(newCrumb);\r\n        }\r\n\r\n        this.breadcrumbs = newCrumbs;\r\n        this.breadcrumbChanged.emit(this.breadcrumbs);\r\n    }\r\n\r\n    private createBreadcrumb(route: ActivatedRouteSnapshot, url: string): Breadcrumb {\r\n        return {\r\n            displayName: route.data['breadcrumb'],\r\n            terminal: this.isTerminal(route),\r\n            url: url,\r\n            route: route.routeConfig\r\n        }\r\n    }\r\n\r\n    private isTerminal(route: ActivatedRouteSnapshot) {\r\n        return route.firstChild === null\r\n            || route.firstChild.routeConfig === null\r\n            || !route.firstChild.routeConfig.path;\r\n    }\r\n\r\n    private createUrl(route: ActivatedRouteSnapshot) {\r\n        return route.url.map(function (s) { return s.toString(); }).join('/');\r\n    }\r\n\r\n    private createRootUrl(route: ActivatedRouteSnapshot) {\r\n        let url = '';\r\n        let next = route.root;\r\n\r\n        while (next.firstChild !== null) {\r\n            next = next.firstChild;\r\n\r\n            if (next.routeConfig === null) { continue; }\r\n            if (!next.routeConfig.path) { continue; }\r\n\r\n            url += `/${this.createUrl(next)}`;\r\n\r\n            if (next === route) { break; }\r\n        }\r\n\r\n        return url;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}