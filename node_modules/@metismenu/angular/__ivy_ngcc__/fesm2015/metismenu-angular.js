import { ɵɵdefineInjectable, Injectable, Component, ElementRef, Input, NgModule } from '@angular/core';
import MetisMenu from 'metismenujs';

import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
class MetismenuAngularService {
    constructor() { }
}
MetismenuAngularService.ɵfac = function MetismenuAngularService_Factory(t) { return new (t || MetismenuAngularService)(); };
MetismenuAngularService.ɵprov = ɵɵdefineInjectable({ factory: function MetismenuAngularService_Factory() { return new MetismenuAngularService(); }, token: MetismenuAngularService, providedIn: "root" });
MetismenuAngularService.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MetismenuAngularService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();

class MetismenuAngularComponent {
    constructor(elem) {
        this.elem = elem;
        this.toggle = 'true';
        this.parentTrigger = 'li';
        this.subMenu = 'ul';
        this.triggerElement = 'a';
    }
    ngAfterViewInit() {
        this.mmOpts = {
            toggle: (this.toggle.toLowerCase() === 'true'),
            parentTrigger: this.parentTrigger || 'li',
            subMenu: this.subMenu || 'ul',
            triggerElement: this.triggerElement || 'a',
        };
        this.mm = new MetisMenu(this.elem.nativeElement, this.mmOpts);
    }
    ngOnInit() { }
    ngOnDestroy() {
        this.mm.dispose();
    }
}
MetismenuAngularComponent.ɵfac = function MetismenuAngularComponent_Factory(t) { return new (t || MetismenuAngularComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
MetismenuAngularComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MetismenuAngularComponent, selectors: [["metis-menu"], ["", "metis-menu", ""]], inputs: { toggle: "toggle", parentTrigger: "parentTrigger", subMenu: "subMenu", triggerElement: "triggerElement" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function MetismenuAngularComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
MetismenuAngularComponent.ctorParameters = () => [
    { type: ElementRef }
];
MetismenuAngularComponent.propDecorators = {
    toggle: [{ type: Input }],
    parentTrigger: [{ type: Input }],
    subMenu: [{ type: Input }],
    triggerElement: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MetismenuAngularComponent, [{
        type: Component,
        args: [{
                selector: 'metis-menu, [metis-menu]',
                // inputs: ['toggle', 'parentTrigger', 'subMenu', 'triggerElement'],
                template: `<ng-content></ng-content>`
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { toggle: [{
            type: Input
        }], parentTrigger: [{
            type: Input
        }], subMenu: [{
            type: Input
        }], triggerElement: [{
            type: Input
        }] }); })();

class MetismenuAngularModule {
}
MetismenuAngularModule.ɵfac = function MetismenuAngularModule_Factory(t) { return new (t || MetismenuAngularModule)(); };
MetismenuAngularModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MetismenuAngularModule });
MetismenuAngularModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MetismenuAngularModule, [{
        type: NgModule,
        args: [{
                declarations: [MetismenuAngularComponent],
                imports: [],
                exports: [MetismenuAngularComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MetismenuAngularModule, { declarations: [MetismenuAngularComponent], exports: [MetismenuAngularComponent] }); })();

/*
 * Public API Surface of metismenu-angular
 */

/**
 * Generated bundle index. Do not edit.
 */

export { MetismenuAngularComponent, MetismenuAngularModule, MetismenuAngularService };

//# sourceMappingURL=metismenu-angular.js.map