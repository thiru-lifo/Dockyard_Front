{"ast":null,"code":"import { Template } from \"./util/Template\";\nimport * as $order from \"./util/Order\";\nimport * as $array from \"./util/Array\";\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\n\nvar Theme =\n/** @class */\nfunction () {\n  function Theme(root, isReal) {\n    Object.defineProperty(this, \"_root\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_rules\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._root = root;\n\n    if (!isReal) {\n      throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n  }\n  /**\r\n   * Use this method to create an instance of this class.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @param   root      Root element\r\n   * @param   settings  Settings\r\n   * @param   template  Template\r\n   * @return            Instantiated object\r\n   */\n\n\n  Object.defineProperty(Theme, \"new\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root) {\n      var x = new this(root, true);\n      x.setupDefaultRules();\n      return x;\n    }\n  });\n  Object.defineProperty(Theme.prototype, \"setupDefaultRules\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * Looks up the rules for a specific theme class.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n   * @param   themeClass Theme class\r\n   * @return             Array<IRule<A>>\r\n   */\n\n  Object.defineProperty(Theme.prototype, \"_lookupRules\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (themeClass) {\n      return this._rules[themeClass];\n    }\n  });\n  /**\r\n   * Creates a [[Template]] for specific theme class and tags.\r\n   *\r\n   * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n   * type checks.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n   * @param   themeClass Theme class\r\n   * @param   themeTags  Theme tags\r\n   * @return             Template\r\n   */\n\n  Object.defineProperty(Theme.prototype, \"ruleRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (themeClass, themeTags) {\n      if (themeTags === void 0) {\n        themeTags = [];\n      }\n\n      var rules = this._rules[themeClass];\n\n      if (!rules) {\n        rules = this._rules[themeClass] = [];\n      }\n\n      themeTags.sort($order.compare);\n\n      var _a = $array.getSortedIndex(rules, function (x) {\n        var order = $order.compare(x.tags.length, themeTags.length);\n\n        if (order === 0) {\n          return $order.compareArray(x.tags, themeTags, $order.compare);\n        } else {\n          return order;\n        }\n      }),\n          index = _a.index,\n          found = _a.found;\n\n      if (found) {\n        return rules[index].template;\n      } else {\n        var template = Template.new({});\n        rules.splice(index, 0, {\n          tags: themeTags,\n          template: template\n        });\n        return template;\n      }\n    }\n  });\n  /**\r\n   * Creates a [[Template]] for specific theme class and tags.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n   * @param   themeClass Theme class\r\n   * @param   themeTags  Theme tags\r\n   * @return             Template\r\n   */\n\n  Object.defineProperty(Theme.prototype, \"rule\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (themeClass, themeTags) {\n      if (themeTags === void 0) {\n        themeTags = [];\n      }\n\n      return this.ruleRaw(themeClass, themeTags);\n    }\n  });\n  return Theme;\n}();\n\nexport { Theme }; //# sourceMappingURL=Theme.js.map","map":null,"metadata":{},"sourceType":"module"}