{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as am5 from '@amcharts/amcharts5';\nimport * as am5xy from '@amcharts/amcharts5/xy';\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/api.service\";\nimport * as i2 from \"src/app/service/notification.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"src/app/service/console.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@ng-bootstrap/ng-bootstrap\";\n\nconst _c0 = function (a0) {\n  return {\n    project_id: a0\n  };\n};\n\nfunction DashboardComponent_div_23_ng_template_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelementStart(1, \"div\", 27);\n    i0.ɵɵelementStart(2, \"div\", 28);\n    i0.ɵɵelementStart(3, \"h5\", 29);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 30);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 31);\n    i0.ɵɵtext(8, \"View Detail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const project_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(project_r4.project[0][\"name\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Class: \", project_r4.project[0][\"class_id\"][\"name\"], \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction1(3, _c0, project_r4.project[0][\"id\"]));\n  }\n}\n\nfunction DashboardComponent_div_23_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"a\", 22);\n    i0.ɵɵelementStart(2, \"span\", 23);\n    i0.ɵɵtext(3, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 24);\n    i0.ɵɵtemplate(5, DashboardComponent_div_23_ng_template_3_div_5_Template, 9, 5, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.projectList);\n  }\n}\n\nfunction DashboardComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"ngb-accordion\", 16);\n    i0.ɵɵelementStart(2, \"ngb-panel\", 20);\n    i0.ɵɵtemplate(3, DashboardComponent_div_23_ng_template_3_Template, 6, 1, \"ng-template\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"closeOthers\", true);\n  }\n}\n\nfunction DashboardComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(api, notification, dialog, logger, aroute) {\n      this.api = api;\n      this.notification = notification;\n      this.dialog = dialog;\n      this.logger = logger;\n      this.selectedWidgets = [];\n      this.projectList = [];\n      this.all_psr_active_count = 0;\n      this.all_gls_active_count = 0;\n      this.all_bls_active_count = 0;\n    }\n\n    onChangeWidget() {\n      localStorage.setItem('bls_custom_dashboard', this.api.encryptData(this.bls_custom_dashboard));\n    }\n\n    ngOnInit() {\n      this.bls_custom_dashboard = localStorage.getItem('bls_custom_dashboard') ? this.api.decryptData(localStorage.getItem('bls_custom_dashboard')) : this.selectedWidgets;\n      this.getListing();\n    }\n\n    checkWidgetExists(widgetName = '') {\n      return inArray(widgetName, this.bls_custom_dashboard);\n    }\n\n    getListing() {\n      this.api.getAPI(environment.API_URL + \"transaction/dashboard/project_list\").subscribe(res => {\n        this.projectList = res.data['all_project_list'];\n        this.all_psr_active_count = res.data['all_psr_active_count'];\n        this.all_gls_active_count = res.data['all_gls_active_count'];\n        this.all_bls_active_count = res.data['all_bls_active_count'];\n        this.logger.log('Project list', res.data);\n      });\n    }\n\n    ngAfterViewInit() {\n      // Chart code goes in here\n      let root = am5.Root.new(\"chartdivSubModule\");\n      root.dateFormatter.setAll({\n        dateFormat: \"yyyy-MM-dd\",\n        dateFields: [\"valueX\", \"openValueX\"]\n      }); // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n\n      root.setThemes([am5themes_Animated.new(root)]); // Create chart\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/\n\n      let chart = root.container.children.push(am5xy.XYChart.new(root, {\n        panX: false,\n        panY: false,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        layout: root.verticalLayout\n      })); // Add legend\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/\n\n      let legend = chart.children.push(am5.Legend.new(root, {\n        centerX: am5.p50,\n        x: am5.p50\n      }));\n      let colors = chart.get(\"colors\"); // Data \n\n      let data = [{\n        category: \"BLS\",\n        start: new Date(2023, 0, 1).getTime(),\n        end: new Date(2023, 0, 14).getTime(),\n        columnSettings: {\n          fill: am5.Color.brighten(colors.getIndex(0), 0)\n        },\n        task: \"project1\"\n      }, {\n        category: \"BLS\",\n        start: new Date(2023, 0, 16).getTime(),\n        end: new Date(2023, 0, 27).getTime(),\n        columnSettings: {\n          fill: am5.Color.brighten(colors.getIndex(0), 0.4)\n        },\n        task: \"project2\"\n      }, {\n        category: \"BLS\",\n        start: new Date(2023, 1, 5).getTime(),\n        end: new Date(2023, 3, 18).getTime(),\n        columnSettings: {\n          fill: am5.Color.brighten(colors.getIndex(0), 0.8)\n        },\n        task: \"project3\"\n      }, {\n        category: \"BLS\",\n        start: new Date(2023, 3, 18).getTime(),\n        end: new Date(2023, 3, 30).getTime(),\n        columnSettings: {\n          fill: am5.Color.brighten(colors.getIndex(0), 1.2)\n        },\n        task: \"project4 \"\n      }]; // Create axes\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n\n      let yRenderer = am5xy.AxisRendererY.new(root, {});\n      yRenderer.grid.template.set(\"location\", 1);\n      let yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {\n        categoryField: \"category\",\n        renderer: yRenderer,\n        tooltip: am5.Tooltip.new(root, {})\n      }));\n      yAxis.data.setAll([{\n        category: \"BLS\"\n      }]);\n      let xAxis = chart.xAxes.push(am5xy.DateAxis.new(root, {\n        baseInterval: {\n          timeUnit: \"minute\",\n          count: 1\n        },\n        renderer: am5xy.AxisRendererX.new(root, {\n          strokeOpacity: 0.1\n        })\n      })); // Add series\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n\n      let series = chart.series.push(am5xy.ColumnSeries.new(root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        openValueXField: \"start\",\n        valueXField: \"end\",\n        categoryYField: \"category\",\n        sequencedInterpolation: true\n      }));\n      series.columns.template.setAll({\n        templateField: \"columnSettings\",\n        strokeOpacity: 0,\n        tooltipText: \"{task}:\\n[bold]{openValueX}[/] - [bold]{valueX}[/]\"\n      });\n      series.data.setAll(data); // Add scrollbars\n\n      chart.set(\"scrollbarX\", am5.Scrollbar.new(root, {\n        orientation: \"horizontal\"\n      })); // Make stuff animate on load\n      // https://www.amcharts.com/docs/v5/concepts/animations/\n\n      series.appear();\n      chart.appear(1000, 100);\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.ConsoleService), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 27,\n    vars: 4,\n    consts: [[1, \"body-card\"], [1, \"container-fluid\"], [1, \"row\", \"d-flex\", \"align-items-center\", \"form-style-md\"], [1, \"col-md-6\"], [1, \"heading-style3\"], [1, \"matt-group\", \"matt-select-multi1\"], [\"appearance\", \"fill\"], [\"placeholder\", \"Choose widgets\", \"multiple\", \"\", 3, \"ngModel\", \"selectionChange\", \"ngModelChange\"], [\"value\", \"project-list\"], [1, \"form-row\"], [1, \"col-md-3\"], [1, \"content-box\", \"bg1\", \"d-flex\", \"align-items-center\"], [1, \"left-icon\"], [\"src\", \"assets/images/cruise.png\", \"alt\", \"\", \"title\", \"\"], [1, \"content-right\"], [\"class\", \"\", 4, \"ngIf\"], [\"activeIds\", \"static-b3\", 1, \"accordion2\", 3, \"closeOthers\"], [\"id\", \"static-b3\", \"title\", \"Sub Module Details\"], [\"ngbPanelContent\", \"\"], [1, \"\"], [\"id\", \"static-b3\", \"title\", \"Projects\"], [1, \"add-right\"], [\"href\", \"#\", \"routerLink\", \"/transaction/psr/initiation-notes\"], [1, \"material-icons\"], [1, \"row\"], [\"class\", \"col-sm-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-4\"], [1, \"card\", \"shadow-sm\", \"p-3\", \"mb-5\", \"bg-white\", \"rounded\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"href\", \"#\", \"routerLink\", \"/transaction/psr/dashboard\", 1, \"btn\", \"btn-primary\", 3, \"queryParams\"], [1, \"card-body\", \"mt-n10\"], [\"id\", \"chartdivSubModule\", 2, \"width\", \"100%\", \"height\", \"450px\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"h3\");\n        i0.ɵɵtext(6, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(10, \"mat-select\", 7);\n        i0.ɵɵlistener(\"selectionChange\", function DashboardComponent_Template_mat_select_selectionChange_10_listener() {\n          return ctx.onChangeWidget();\n        })(\"ngModelChange\", function DashboardComponent_Template_mat_select_ngModelChange_10_listener($event) {\n          return ctx.bls_custom_dashboard = $event;\n        });\n        i0.ɵɵelementStart(11, \"mat-option\", 8);\n        i0.ɵɵtext(12, \"Projects\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵelementStart(14, \"div\", 10);\n        i0.ɵɵelementStart(15, \"div\", 11);\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵelement(17, \"img\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 14);\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \"BLS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"h3\");\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, DashboardComponent_div_23_Template, 4, 1, \"div\", 15);\n        i0.ɵɵelementStart(24, \"ngb-accordion\", 16);\n        i0.ɵɵelementStart(25, \"ngb-panel\", 17);\n        i0.ɵɵtemplate(26, DashboardComponent_ng_template_26_Template, 2, 0, \"ng-template\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.bls_custom_dashboard);\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate(ctx.all_bls_active_count > 0 ? ctx.all_bls_active_count : 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkWidgetExists(\"project-list\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"closeOthers\", true);\n      }\n    },\n    directives: [i6.MatFormField, i7.MatSelect, i8.NgControlStatus, i8.NgModel, i9.MatOption, i10.NgIf, i11.NgbAccordion, i11.NgbPanel, i11.NgbPanelContent, i5.RouterLinkWithHref, i10.NgForOf],\n    styles: [\".content-box[_ngcontent-%COMP%]{min-height:100px!important}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}