{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Entity } from \"../../util/Entity\";\n/**\r\n * Base class for gradients.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\n\nvar Gradient =\n/** @class */\nfunction (_super) {\n  __extends(Gradient, _super);\n\n  function Gradient() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Gradient.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      // Applying themes because gradient will not have parent\n      _super.prototype._afterNewApplyThemes.call(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Gradient.prototype, \"getFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_target) {\n      return {\n        addColorStop: function (_offset, _color) {}\n      };\n    }\n  });\n  Object.defineProperty(Gradient.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this); //if (this.isDirty(\"target\") && this.get(\"target\")) {\n      //\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\n      //\t});\n      //}\n\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Gradient.prototype, \"getBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target) {\n      var gradientTarget = this.get(\"target\");\n\n      if (gradientTarget) {\n        var bounds = gradientTarget.globalBounds();\n        var p0 = target.toLocal({\n          x: bounds.left,\n          y: bounds.top\n        });\n        var p1 = target.toLocal({\n          x: bounds.right,\n          y: bounds.top\n        });\n        var p2 = target.toLocal({\n          x: bounds.right,\n          y: bounds.bottom\n        });\n        var p3 = target.toLocal({\n          x: bounds.left,\n          y: bounds.bottom\n        });\n        return {\n          left: Math.min(p0.x, p1.x, p2.x, p3.x),\n          top: Math.min(p0.y, p1.y, p2.y, p3.y),\n          right: Math.max(p0.x, p1.x, p2.x, p3.x),\n          bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n        };\n      }\n\n      return target._display.getLocalBounds();\n    }\n  });\n  Object.defineProperty(Gradient, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Gradient\"\n  });\n  Object.defineProperty(Gradient, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Entity.classNames.concat([Gradient.className])\n  });\n  return Gradient;\n}(Entity);\n\nexport { Gradient }; //# sourceMappingURL=Gradient.js.map","map":null,"metadata":{},"sourceType":"module"}