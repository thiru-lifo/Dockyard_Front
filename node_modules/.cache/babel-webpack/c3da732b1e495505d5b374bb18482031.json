{"ast":null,"code":"import { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { environment } from \"src/environments/environment\";\nimport { language } from \"src/environments/language\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/api.service\";\nimport * as i2 from \"src/app/service/notification.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\n\nfunction SecurityPinComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Verification code is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let SecurityPinComponent = /*#__PURE__*/(() => {\n  class SecurityPinComponent {\n    constructor(api, notification, router) {\n      this.api = api;\n      this.notification = notification;\n      this.router = router;\n      this.codeverifyForm = new FormGroup({\n        email: new FormControl(''),\n        verification_code: new FormControl('', Validators.required)\n      });\n\n      this.Error = (controlName, errorName) => {\n        return this.codeverifyForm.controls[controlName].hasError(errorName);\n      };\n    }\n\n    ngOnInit() {\n      let checkfp = localStorage.getItem('fp-detail');\n      let logdata = localStorage.getItem('log-detail');\n\n      if (checkfp) {\n        this.router.navigateByUrl('authenticate/biometrics-verify');\n      } else if (logdata) {\n        this.router.navigateByUrl('authenticate/biometrics-log');\n      } else {\n        this.router.navigateByUrl('authenticate/twofactor');\n      }\n\n      this.getresponse();\n    }\n\n    getresponse() {\n      let response = localStorage.getItem('token-detail');\n      this.resData = this.api.decryptData(response);\n      console.log(this.resData.user_id);\n      this.codeverifyForm.patchValue({\n        id: '',\n        email: this.resData.user_email\n      });\n    }\n\n    CodeVerify() {\n      console.log(this.codeverifyForm.value);\n      if (this.codeverifyForm.value.verification_code == '') this.notification.displayMessage('Enter verification code');else {\n        this.api.postAPI(environment.API_URL + \"api/auth/verifyemailverificationcode\", this.codeverifyForm.value).subscribe(res => {\n          console.log(res);\n\n          if (res.status == environment.SUCCESS_CODE) {\n            console.log(res);\n            this.notification.displayMessage(language[environment.DEFAULT_LANG].codeVerify);\n\n            switch (this.resData.role_code) {\n              case 'admin':\n                this.router.navigateByUrl('dashboard/admin');\n                break;\n\n              case 'gro':\n                this.router.navigateByUrl('/gro/dashboard');\n                break;\n\n              case 'nurse':\n                this.router.navigateByUrl('/nurse/dashboard-nurse');\n                break;\n\n              default:\n                this.router.navigateByUrl('');\n                break;\n            }\n          } else {\n            this.notification.displayMessage(res.message);\n          }\n        });\n      } //this.router.navigateByUrl('dashboard/admin');\n    }\n\n    resendCode() {\n      this.api.postAPI(environment.API_URL + 'api/auth/resend-code', {\n        user_id: this.resData.user_id\n      }).subscribe(res => {\n        if (res) {\n          this.notification.displayMessage(language[environment.DEFAULT_LANG].codeSent);\n        } else {\n          this.notification.displayMessage(language[environment.DEFAULT_LANG].codeErr);\n        }\n      });\n    }\n\n  }\n\n  SecurityPinComponent.ɵfac = function SecurityPinComponent_Factory(t) {\n    return new (t || SecurityPinComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  SecurityPinComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SecurityPinComponent,\n    selectors: [[\"app-security-pin\"]],\n    decls: 29,\n    vars: 2,\n    consts: [[1, \"login-page\"], [1, \"container-fluid\"], [1, \"login-cover\"], [1, \"row\", \"no-gutters\", \"d-flex\", \"align-items-center\"], [1, \"col-md-7\"], [1, \"login-leftbg\", 2, \"background\", \"url(../assets/images/leaf-patten.png) no-repeat right top #651137\"], [\"src\", \"assets/images/login-image.png\", \"alt\", \"\", \"title\", \"\", 1, \"img-fluid\"], [1, \"col-md-5\", \"col-12\"], [1, \"login-box\"], [1, \"logo\", \"text-center\"], [\"src\", \"assets/images/logo.png\"], [1, \"login-form\"], [3, \"formGroup\"], [1, \"star\"], [1, \"form-group-label\"], [\"appearance\", \"legacy\"], [\"matInput\", \"\", \"placeholder\", \"\", \"formControlName\", \"verification_code\"], [4, \"ngIf\"], [1, \"remember-link\"], [\"href\", \"javascript:void(0);\", 1, \"float-right\", 3, \"click\"], [1, \"mt-2\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"w-100\", 3, \"click\"]],\n    template: function SecurityPinComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelement(6, \"img\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵelementStart(9, \"div\", 9);\n        i0.ɵɵelement(10, \"img\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 11);\n        i0.ɵɵelementStart(12, \"form\", 12);\n        i0.ɵɵelementStart(13, \"h3\");\n        i0.ɵɵtext(14, \"Enter Verification Code \");\n        i0.ɵɵelementStart(15, \"b\", 13);\n        i0.ɵɵtext(16, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵtext(18, \"Please enter the code sent to your email address.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 14);\n        i0.ɵɵelementStart(20, \"mat-form-field\", 15);\n        i0.ɵɵelement(21, \"input\", 16);\n        i0.ɵɵtemplate(22, SecurityPinComponent_mat_error_22_Template, 2, 0, \"mat-error\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 18);\n        i0.ɵɵelementStart(24, \"a\", 19);\n        i0.ɵɵlistener(\"click\", function SecurityPinComponent_Template_a_click_24_listener() {\n          return ctx.resendCode();\n        });\n        i0.ɵɵtext(25, \"Resend Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 20);\n        i0.ɵɵelementStart(27, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function SecurityPinComponent_Template_button_click_27_listener() {\n          return ctx.CodeVerify();\n        });\n        i0.ɵɵtext(28, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formGroup\", ctx.codeverifyForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.Error(\"verification_code\", \"required\"));\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i5.MatFormField, i6.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i7.NgIf, i8.MatButton, i5.MatError],\n    styles: [\".login-page[_ngcontent-%COMP%]{padding:0 50px;position:absolute;transform:translateY(-50%);top:50%;left:0;right:0}.logo[_ngcontent-%COMP%]{margin-bottom:30px}.logo[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:125px}.logo[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:28px;font-weight:500;color:#332f31;margin:15px 0 20px}.w-100[_ngcontent-%COMP%]{width:100%}.image-right[_ngcontent-%COMP%]{padding-left:50px}.login-leftbg[_ngcontent-%COMP%]{background:#651137;padding:100px 50px 80px;text-align:center;position:relative}.login-leftbg[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:50%}.login-box[_ngcontent-%COMP%]{box-shadow:0 16px 32px #1f1c1d08,0 6px 24px #1f1c1d0d;border-radius:16px;background:#fff;padding:24px 80px 48px;margin-left:-50px}.login-box[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%]{font-size:16px;font-weight:600;color:#736d70;margin-bottom:10px;display:block}.login-box[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%]   .star[_ngcontent-%COMP%]{color:#f01414}.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:8px 10px;font-size:18px;box-shadow:none;border-radius:50px}.mat-raised-button.mat-primary[_ngcontent-%COMP%]{background:#651037;border-radius:50px}.login-form[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:0}.remember-link[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%], .remember-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-size:14px;color:#651137!important}.remember-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover, .remember-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus{color:#736d70}.remember-link[_ngcontent-%COMP%]{display:block;width:100%;height:50px!important}.login-form[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:18px;color:#332f31;font-weight:700;margin:0 0 10px}.login-form[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:16px;color:#736d70;margin-bottom:20px}\"]\n  });\n  return SecurityPinComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}