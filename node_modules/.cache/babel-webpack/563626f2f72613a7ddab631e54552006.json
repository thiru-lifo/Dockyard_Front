{"ast":null,"code":"export class CustomValidators {\n  constructor() {}\n\n  static onlyChar() {\n    return control => {\n      if (control.value == '') return null;\n      let re = new RegExp('^[a-zA-Z ]*$');\n\n      if (re.test(control.value)) {\n        return null;\n      } else {\n        return {\n          onlyChar: true\n        };\n      }\n    };\n  }\n\n  static mustMatch(controlName, matchingControlName) {\n    return formGroup => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        return;\n      } // set error on matchingControl if validation fails\n\n\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({\n          mustMatch: true\n        });\n      } else {\n        matchingControl.setErrors(null);\n      }\n\n      return null;\n    };\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}