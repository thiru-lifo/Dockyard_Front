{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"./Graphics\";\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\n\nvar Rectangle =\n/** @class */\nfunction (_super) {\n  __extends(Rectangle, _super);\n\n  function Rectangle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Rectangle.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n        this._clear = true;\n      }\n    }\n  });\n  Object.defineProperty(Rectangle.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n\n      if (this._clear && !this.get(\"draw\")) {\n        this._draw();\n      }\n    }\n  });\n  Object.defineProperty(Rectangle.prototype, \"_draw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._display.drawRect(0, 0, this.width(), this.height());\n    }\n  });\n  Object.defineProperty(Rectangle.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.markDirty();\n      this._clear = true;\n    }\n  });\n  Object.defineProperty(Rectangle, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Rectangle\"\n  });\n  Object.defineProperty(Rectangle, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([Rectangle.className])\n  });\n  return Rectangle;\n}(Graphics);\n\nexport { Rectangle }; //# sourceMappingURL=Rectangle.js.map","map":null,"metadata":{},"sourceType":"module"}