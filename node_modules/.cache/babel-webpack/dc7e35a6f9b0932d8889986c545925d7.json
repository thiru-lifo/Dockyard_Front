{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/core\";\n\nfunction RoleSelectionComponent_ng_container_19_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"value\", role_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", role_r2.user_role.name, \" \", role_r2.user_role.code != \"admin\" && role_r2.center ? \" - \" + role_r2.center.name : \"\", \"\");\n  }\n}\n\nfunction RoleSelectionComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, RoleSelectionComponent_ng_container_19_mat_option_1_Template, 2, 3, \"mat-option\", 22);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const role_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", role_r2.user_role.name != \"admin\");\n  }\n}\n\nfunction RoleSelectionComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Select Role\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let RoleSelectionComponent = /*#__PURE__*/(() => {\n  class RoleSelectionComponent {\n    constructor(api, router) {\n      this.api = api;\n      this.router = router;\n      this.roles = [];\n      this.RoleForm = new FormGroup({\n        rolename: new FormControl('', [Validators.required])\n      });\n\n      this.Error = (controlName, errorName) => {\n        return this.RoleForm.controls[controlName].hasError(errorName);\n      };\n\n      this.appLogo = localStorage.getItem('APPLOGO') ? localStorage.getItem('APPLOGO') : '';\n    }\n\n    ngOnInit() {\n      localStorage.removeItem('tmsToken');\n      localStorage.removeItem('liveCounter');\n      this.getUserRole();\n    }\n\n    getUserRole() {\n      this.resData = this.api.decryptData(localStorage.getItem('token-detail'));\n      this.roles = this.resData.role_center;\n      console.log(this.resData.role_center);\n    }\n\n    SelectRole() {\n      console.log(this.RoleForm.value.rolename.user_role.id);\n\n      if (this.RoleForm.valid) {\n        this.api.getAPI(environment.API_URL + \"access/permissions?user_role_id=\" + this.RoleForm.value.rolename.user_role.id + '&process_id=' + this.resData.process_id).subscribe(res => {\n          if (res.status == environment.SUCCESS_CODE) {\n            if (res.data.length == 1) {\n              let data = this.api.decryptData(localStorage.getItem('token-detail'));\n              data.permissions = res.data[0].permissions;\n              data.role_code = this.RoleForm.value.rolename.user_role.code;\n              data.role_id = this.RoleForm.value.rolename.user_role.id;\n              data.center = this.RoleForm.value.rolename.center ? this.RoleForm.value.rolename.center.id : '';\n              data.center_name = this.RoleForm.value.rolename.center ? this.RoleForm.value.rolename.center.name : '';\n              data.role_name = this.RoleForm.value.rolename.user_role.name;\n              this.api.postAPI(environment.API_URL + \"api/auth/authentications\", {\n                user_id: this.resData.user_id,\n                user_role_id: this.RoleForm.value.rolename.user_role.id,\n                center_id: this.RoleForm.value.rolename.center ? this.RoleForm.value.rolename.center.id : ''\n              }).subscribe(res => {\n                console.log(res.authentication.fpdata);\n                data.token_user = res.authentication.token_user;\n                localStorage.setItem('token-detail', this.api.encryptData(data));\n\n                if (res.authentication.biometric) {\n                  if (res.authentication.fpdata.length < 3) {\n                    this.router.navigateByUrl('/authenticate/biometrics-log');\n                  } else {\n                    this.router.navigateByUrl('/authenticate/biometrics-verify');\n                  }\n                } else if (res.authentication.twofactor) {\n                  this.router.navigateByUrl('/authenticate/twofactor');\n                } else {\n                  switch (this.RoleForm.value.rolename.user_role.code) {\n                    case 'admin':\n                      this.router.navigateByUrl('dashboard/admin');\n                      break;\n\n                    case 'gro':\n                      this.router.navigateByUrl('/gro/dashboard');\n                      break;\n\n                    case 'nurse':\n                      this.router.navigateByUrl('/nurse/dashboard-nurse');\n                      break;\n\n                    default:\n                      this.router.navigateByUrl('dashboard/admin');\n                      break;\n                  }\n                }\n              });\n            }\n          }\n        });\n      }\n    }\n\n  }\n\n  RoleSelectionComponent.ɵfac = function RoleSelectionComponent_Factory(t) {\n    return new (t || RoleSelectionComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  RoleSelectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RoleSelectionComponent,\n    selectors: [[\"app-role-selection\"]],\n    decls: 27,\n    vars: 4,\n    consts: [[1, \"login-page\"], [1, \"container-fluid\"], [1, \"login-cover\"], [1, \"row\", \"no-gutters\", \"d-flex\", \"align-items-center\"], [1, \"col-md-3\", \"col-12\"], [1, \"col-md-6\", \"col-12\"], [1, \"login-box\"], [1, \"logo\", \"text-center\"], [3, \"src\"], [1, \"login-form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group-label\"], [1, \"matt-group\"], [1, \"star\"], [\"appearance\", \"fill\"], [\"placeholder\", \"Select Role\", \"formControlName\", \"rolename\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"mt-2\"], [1, \"row\"], [1, \"col-md-12\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"w-100\"], [3, \"value\", 4, \"ngIf\"], [3, \"value\"]],\n    template: function RoleSelectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵelement(8, \"img\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 9);\n        i0.ɵɵelementStart(10, \"form\", 10);\n        i0.ɵɵlistener(\"ngSubmit\", function RoleSelectionComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.SelectRole();\n        });\n        i0.ɵɵelementStart(11, \"div\", 11);\n        i0.ɵɵelementStart(12, \"div\", 12);\n        i0.ɵɵelementStart(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Role Selection \");\n        i0.ɵɵelementStart(15, \"b\", 13);\n        i0.ɵɵtext(16, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 14);\n        i0.ɵɵelementStart(18, \"mat-select\", 15);\n        i0.ɵɵtemplate(19, RoleSelectionComponent_ng_container_19_Template, 2, 1, \"ng-container\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, RoleSelectionComponent_mat_error_20_Template, 2, 0, \"mat-error\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 18);\n        i0.ɵɵelementStart(22, \"div\", 19);\n        i0.ɵɵelementStart(23, \"div\", 20);\n        i0.ɵɵelementStart(24, \"button\", 21);\n        i0.ɵɵtext(25, \"Proceed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.appLogo, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.RoleForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.Error(\"rolename\", \"required\"));\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.MatLabel, i4.MatFormField, i5.MatSelect, i3.NgControlStatus, i3.FormControlName, i6.NgForOf, i6.NgIf, i7.MatButton, i8.MatOption, i4.MatError],\n    styles: [\".login-page[_ngcontent-%COMP%]{padding:0 50px;position:absolute;transform:translateY(-50%);top:50%;left:0;right:0}.logo[_ngcontent-%COMP%]{margin-bottom:30px}.logo[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:125px}.logo[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:28px;font-weight:500;color:#332f31;margin:15px 0 20px}.w-100[_ngcontent-%COMP%]{width:100%}.image-right[_ngcontent-%COMP%]{padding-left:50px}.login-leftbg[_ngcontent-%COMP%]{background:#0B014A;padding:100px 50px 80px;text-align:center;position:relative}.login-leftbg[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:50%}.login-box[_ngcontent-%COMP%]{box-shadow:0 16px 32px #1f1c1d08,0 6px 24px #1f1c1d0d;border-radius:16px;background:#fff;padding:24px 80px 48px;margin-left:-50px}.login-box[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%]{font-size:16px;font-weight:600;color:#736d70;margin-bottom:10px;display:block}.login-box[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%]   .star[_ngcontent-%COMP%]{color:#f01414}.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:8px 10px;font-size:18px;box-shadow:none;border-radius:50px}.mat-raised-button.mat-primary[_ngcontent-%COMP%]{background:#0B014A;border-radius:50px}.mat-stroked-button.mat-primary[_ngcontent-%COMP%]{border-color:#651037;color:#651037}.login-form[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:0}.remember-link[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%], .remember-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-size:14px;color:#736d70}.thumb-scanner[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:80px}.apply[_ngcontent-%COMP%]{color:#f01414;font-size:12px!important}\"]\n  });\n  return RoleSelectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}