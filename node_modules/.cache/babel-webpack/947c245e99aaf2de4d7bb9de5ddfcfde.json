{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/api.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthguardGuard = /*#__PURE__*/(() => {\n  class AuthguardGuard {\n    constructor(api, router) {\n      this.api = api;\n      this.router = router;\n    }\n\n    canActivate(route, state) {\n      if (this.api.loggedIn()) {\n        let tokenDetail = this.api.decryptData(localStorage.getItem('token-detail'));\n\n        if (tokenDetail.permissions) {\n          let modules = JSON.parse(tokenDetail.permissions);\n          setTimeout(() => {//this.urlRestriction(modules);\n          }, 300);\n        }\n\n        return true;\n      } else {\n        this.router.navigateByUrl(localStorage.getItem('LOGINPAGE') ? localStorage.getItem('LOGINPAGE') : '/authenticate/login');\n        return false;\n      }\n    } // urlRestriction(modules)\n    // {\n    //   let components = modules.map(value => value.components);\n    //   let mergedComponents = [].concat.apply([], components);\n    //   let attributes = mergedComponents.map(value => value.attributes);\n    //   let mergedAttributes = [].concat.apply([], attributes);\n    //   let componentURLs = mergedComponents.map(value => value.status==true?value.url:'');\n    //   let attributeURLs = mergedAttributes.map(value => value.status==true?value.url:'');\n    //   let moduleURLs = modules.map(value => value.status==true?value.url:'');\n    //   let mergedURLs = componentURLs.concat(attributeURLs);\n    //   mergedURLs=mergedURLs.concat(moduleURLs);\n    //   mergedURLs = mergedURLs.filter(function (el) {\n    //     return el != '';\n    //   });\n    //   let currentPath=location.hash;\n    //   currentPath=currentPath.substring(2);\n    //   /*console.log('currentPath',currentPath);\n    //   console.log('mergedURLs',mergedURLs);*/\n    //   if(mergedURLs.indexOf(currentPath)===-1)\n    //   {\n    //     this.router.navigateByUrl('/error/403');\n    //   }\n\n\n    urlRestriction(modules) {\n      let tokenDetail = this.api.decryptData(localStorage.getItem('token-detail'));\n      let components = modules.map(value => value.components);\n      let mergedComponents = [].concat.apply([], components);\n      let attributes = mergedComponents.map(value => value.attributes);\n      let mergedAttributes = [].concat.apply([], attributes);\n      let componentURLs = mergedComponents.map(value => value.status == true ? value.url : '');\n      let attributeURLs = mergedAttributes.map(value => value.status == true ? value.url : '');\n      let moduleURLs = modules.map(value => value.status == true ? value.url : '');\n      let mergedURLs = componentURLs.concat(attributeURLs);\n      mergedURLs = mergedURLs.concat(moduleURLs);\n      mergedURLs = mergedURLs.filter(function (el) {\n        return el != '';\n      });\n      let currentPath = location.hash;\n      currentPath = currentPath.substring(2);\n      /*console.log('currentPath',currentPath);\n      console.log('mergedURLs',mergedURLs);*/\n\n      mergedURLs.push('authenticate/biometrics-log');\n      mergedURLs.push('authenticate/biometrics-verify');\n\n      if (mergedURLs.indexOf(currentPath) === -1 && tokenDetail.role_code == 'admin') {\n        this.router.navigateByUrl('/error/403');\n      }\n    }\n\n  }\n\n  AuthguardGuard.ɵfac = function AuthguardGuard_Factory(t) {\n    return new (t || AuthguardGuard)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthguardGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthguardGuard,\n    factory: AuthguardGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthguardGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}