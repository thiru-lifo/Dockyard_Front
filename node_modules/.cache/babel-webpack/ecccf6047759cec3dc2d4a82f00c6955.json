{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"./Graphics\";\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\n\nvar Circle =\n/** @class */\nfunction (_super) {\n  __extends(Circle, _super);\n\n  function Circle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Circle.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isDirty(\"radius\")) {\n        this._clear = true;\n      }\n    }\n  });\n  Object.defineProperty(Circle.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n\n      if (this._clear) {\n        this._display.drawCircle(0, 0, this.get(\"radius\", 10));\n      }\n    }\n  });\n  Object.defineProperty(Circle, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Circle\"\n  });\n  Object.defineProperty(Circle, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([Circle.className])\n  });\n  return Circle;\n}(Graphics);\n\nexport { Circle }; //# sourceMappingURL=Circle.js.map","map":null,"metadata":{},"sourceType":"module"}