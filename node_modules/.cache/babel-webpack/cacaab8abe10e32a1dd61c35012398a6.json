{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Scrollbar } from \"./Scrollbar\";\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\n\nvar Slider =\n/** @class */\nfunction (_super) {\n  __extends(Slider, _super);\n\n  function Slider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Slider.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._addOrientationClass();\n\n      _super.prototype._afterNew.call(this);\n\n      this.endGrip.setPrivate(\"visible\", false);\n      this.thumb.setPrivate(\"visible\", false);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Slider.prototype, \"updateGrips\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.updateGrips.call(this);\n\n      var startGrip = this.startGrip;\n      this.endGrip.setAll({\n        x: startGrip.x(),\n        y: startGrip.y()\n      });\n      this.setRaw(\"end\", this.get(\"start\"));\n    }\n  });\n  Object.defineProperty(Slider, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Slider\"\n  });\n  Object.defineProperty(Slider, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Scrollbar.classNames.concat([Slider.className])\n  });\n  return Slider;\n}(Scrollbar);\n\nexport { Slider }; //# sourceMappingURL=Slider.js.map","map":null,"metadata":{},"sourceType":"module"}