{"ast":null,"code":"import { Injectable, EventEmitter } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\n\nvar BreadcrumbService =\n/** @class */\nfunction () {\n  function BreadcrumbService(router) {\n    var _this = this;\n\n    this.router = router;\n    this.breadcrumbChanged = new EventEmitter(false);\n    this.breadcrumbs = new Array();\n    this.router.events.subscribe(function (routeEvent) {\n      _this.onRouteEvent(routeEvent);\n    });\n  }\n\n  BreadcrumbService.prototype.changeBreadcrumb = function (route, name) {\n    var rootUrl = this.createRootUrl(route);\n    var breadcrumb = this.breadcrumbs.find(function (bc) {\n      return bc.url === rootUrl;\n    });\n\n    if (!breadcrumb) {\n      return;\n    }\n\n    breadcrumb.displayName = name;\n    this.breadcrumbChanged.emit(this.breadcrumbs);\n  };\n\n  BreadcrumbService.prototype.onRouteEvent = function (routeEvent) {\n    if (!(routeEvent instanceof NavigationEnd)) {\n      return;\n    }\n\n    var route = this.router.routerState.root.snapshot;\n    var url = '';\n    var breadCrumbIndex = 0;\n    var newCrumbs = [];\n\n    while (route.firstChild != null) {\n      route = route.firstChild;\n\n      if (route.routeConfig === null) {\n        continue;\n      }\n\n      if (!route.routeConfig.path) {\n        continue;\n      }\n\n      url += \"/\" + this.createUrl(route);\n\n      if (!route.data['breadcrumb']) {\n        continue;\n      }\n\n      var newCrumb = this.createBreadcrumb(route, url);\n\n      if (breadCrumbIndex < this.breadcrumbs.length) {\n        var existing = this.breadcrumbs[breadCrumbIndex++];\n\n        if (existing && existing.route == route.routeConfig) {\n          newCrumb.displayName = existing.displayName;\n        }\n      }\n\n      newCrumbs.push(newCrumb);\n    }\n\n    this.breadcrumbs = newCrumbs;\n    this.breadcrumbChanged.emit(this.breadcrumbs);\n  };\n\n  BreadcrumbService.prototype.createBreadcrumb = function (route, url) {\n    return {\n      displayName: route.data['breadcrumb'],\n      terminal: this.isTerminal(route),\n      url: url,\n      route: route.routeConfig\n    };\n  };\n\n  BreadcrumbService.prototype.isTerminal = function (route) {\n    return route.firstChild === null || route.firstChild.routeConfig === null || !route.firstChild.routeConfig.path;\n  };\n\n  BreadcrumbService.prototype.createUrl = function (route) {\n    return route.url.map(function (s) {\n      return s.toString();\n    }).join('/');\n  };\n\n  BreadcrumbService.prototype.createRootUrl = function (route) {\n    var url = '';\n    var next = route.root;\n\n    while (next.firstChild !== null) {\n      next = next.firstChild;\n\n      if (next.routeConfig === null) {\n        continue;\n      }\n\n      if (!next.routeConfig.path) {\n        continue;\n      }\n\n      url += \"/\" + this.createUrl(next);\n\n      if (next === route) {\n        break;\n      }\n    }\n\n    return url;\n  };\n  /** @nocollapse */\n\n\n  BreadcrumbService.ctorParameters = function () {\n    return [{\n      type: Router\n    }];\n  };\n\n  BreadcrumbService.ɵfac = function BreadcrumbService_Factory(t) {\n    return new (t || BreadcrumbService)(ɵngcc0.ɵɵinject(ɵngcc1.Router));\n  };\n\n  BreadcrumbService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: BreadcrumbService,\n    factory: function (t) {\n      return BreadcrumbService.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return BreadcrumbService;\n}();\n\nexport { BreadcrumbService }; //# sourceMappingURL=breadcrumb.service.js.map","map":null,"metadata":{},"sourceType":"module"}