{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Entity } from \"./Entity\";\nimport { StyleRule } from \"./Utils\";\nimport { MultiDisposer, CounterDisposer } from \"../../core/util/Disposer\";\nimport * as $utils from \"./Utils\";\n/**\r\n * @ignore\r\n */\n\nvar rules;\n/**\r\n * @ignore\r\n */\n\nfunction modalCSS(element, root, _prefix) {\n  var ic = root.interfaceColors;\n  var active = ic.get(\"secondaryButton\").toCSS();\n  var text = ic.get(\"text\").toCSS();\n  var shadow = ic.get(\"alternativeBackground\").toCSS(0.45); //const altbg = ic.get(\"alternativeBackground\")!.toCSS();\n\n  if (!rules) {\n    var disposer_1 = new MultiDisposer([new StyleRule(element, \".am5-modal\", {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"position\": \"absolute\",\n      \"z-index\": \"100000\",\n      \"top\": \"0\",\n      \"left\": \"0\"\n    }), new StyleRule(element, \".am5-modal-curtain\", {\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"position\": \"absolute\",\n      \"background\": ic.get(\"background\").toCSS(0.5),\n      \"z-index\": \"100\"\n    }), new StyleRule(element, \".am5-modal-wrapper\", {\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"position\": \"absolute\",\n      \"text-align\": \"center\",\n      \"white-space\": \"nowrap\",\n      \"background\": ic.get(\"background\").toCSS(0.5),\n      \"z-index\": \"101\"\n    }), new StyleRule(element, \".am5-modal-wrapper:before\", {\n      \"content\": \"''\",\n      \"display\": \"inline-block\",\n      \"height\": \"100%\",\n      \"vertical-align\": \"middle\",\n      \"margin-right\": \"-0.25em\"\n    }), new StyleRule(element, \".am5-modal-content\", {\n      \"display\": \"inline-block\",\n      \"padding\": \"1.2em\",\n      \"vertical-align\": \"middle\",\n      \"text-align\": \"left\",\n      \"white-space\": \"normal\",\n      \"background\": ic.get(\"background\").toCSS(),\n      //\"border\": \"1px solid \" + ic.get(\"alternativeBackground\")!.toCSS(),\n      \"border-radius\": \"4px\",\n      \"-webkit-box-shadow\": \"0px 0px 36px 0px \" + shadow,\n      \"box-shadow\": \"0px 0px 36px 0px \" + shadow,\n      \"color\": text\n    }), new StyleRule(element, \".am5-modal-content h1\", {\n      \"font-size\": \"1em\",\n      \"margin\": \"0 0 0.5em 0\"\n    }), new StyleRule(element, \".am5-modal-table\", {\n      \"display\": \"table\",\n      \"margin\": \"1em 0\"\n    }), new StyleRule(element, \".am5-modal-table-row\", {\n      \"display\": \"table-row\"\n    }), new StyleRule(element, \".am5-modal-table-heading\", {\n      \"display\": \"table-heading\",\n      \"padding\": \"3px 10px 3px 0\"\n    }), new StyleRule(element, \".am5-modal-table-cell\", {\n      \"display\": \"table-cell\",\n      \"padding\": \"3px 0 3px 0\"\n    }), new StyleRule(element, \".am5-modal-table-cell > *\", {\n      \"vertical-align\": \"middle\"\n    }), new StyleRule(element, \".am5-modal-content input[type=text], .am5-modal-content input[type=number], .am5-modal-content select\", {\n      \"border\": \"1px solid \" + active,\n      \"border-radius\": \"4px\",\n      \"padding\": \"3px 5px\",\n      \"margin\": \"2px\"\n    }), new StyleRule(element, \".am5-modal-input-narrow\", {\n      \"width\": \"50px\"\n    }), new StyleRule(element, \".am5-modal-button\", {\n      \"font-weight\": \"400\",\n      \"color\": ic.get(\"secondaryButtonText\").toCSS(),\n      \"line-height\": \"1.5\",\n      \"text-align\": \"center\",\n      \"text-decoration\": \"none\",\n      \"vertical-align\": \"middle\",\n      \"cursor\": \"pointer\",\n      \"padding\": \"0.2em 0.8em\",\n      \"font-size\": \"1em\",\n      \"border-radius\": \"0.25em\",\n      \"margin\": \"0 0.25em 0 0\",\n      \"border\": \"1px solid \" + ic.get(\"secondaryButtonStroke\").toCSS(),\n      \"background\": ic.get(\"secondaryButton\").toCSS()\n    }), new StyleRule(element, \".am5-modal-button:hover\", {\n      \"background\": ic.get(\"secondaryButtonHover\").toCSS()\n    }), new StyleRule(element, \".am5-modal-button.am5-modal-primary\", {\n      \"color\": ic.get(\"primaryButtonText\").toCSS(),\n      \"border\": \"1px solid \" + ic.get(\"primaryButtonStroke\").toCSS(),\n      \"background\": ic.get(\"primaryButton\").toCSS()\n    }), new StyleRule(element, \".am5-modal-button.am5-modal-primary:hover\", {\n      \"background\": ic.get(\"primaryButtonHover\").toCSS()\n    })]);\n    rules = new CounterDisposer(function () {\n      rules = undefined;\n      disposer_1.dispose();\n    });\n  }\n\n  return rules.increment();\n}\n/**\r\n * Used to display a modal dialog with HTML content.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/modal-popups/} for more info\r\n */\n\n\nvar Modal =\n/** @class */\nfunction (_super) {\n  __extends(Modal, _super);\n\n  function Modal() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } //protected _currentPass: number = 0;\n\n\n  Object.defineProperty(Modal.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this; // Applying themes because this will not have parents\n\n\n      _super.prototype._afterNewApplyThemes.call(this); // Defaults\n\n\n      this._setRawDefault(\"deactivateRoot\", true); // Load CSS\n\n\n      modalCSS($utils.getShadowRoot(this._root.dom), this._root); // Create elements\n\n      var container = document.createElement(\"div\");\n      container.className = \"am5-modal\";\n      container.style.display = \"none\";\n\n      this.root._inner.appendChild(container);\n\n      this.setPrivate(\"container\", container);\n      var curtain = document.createElement(\"div\");\n      curtain.className = \"am5-modal-curtain\";\n      container.appendChild(curtain);\n      this.setPrivate(\"curtain\", curtain);\n      $utils.addEventListener(curtain, \"click\", function () {\n        _this.cancel();\n      });\n      var wrapper = document.createElement(\"div\");\n      wrapper.className = \"am5-modal-wrapper\";\n      container.appendChild(wrapper);\n      this.setPrivate(\"wrapper\", wrapper);\n      var content = document.createElement(\"div\");\n      content.className = \"am5-modal-content\";\n      wrapper.appendChild(content);\n      this.setPrivate(\"content\", content);\n      var html = this.get(\"content\");\n\n      if (html) {\n        content.innerHTML = html;\n      } // Close on ESC\n\n\n      if ($utils.supports(\"keyboardevents\")) {\n        this._disposers.push($utils.addEventListener(document, \"keydown\", function (ev) {\n          if (_this.isOpen() && ev.keyCode == 27) {\n            _this.cancel();\n          }\n        }));\n      }\n    }\n  });\n  Object.defineProperty(Modal.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isDirty(\"content\")) {\n        this.getPrivate(\"content\").innerHTML = this.get(\"content\", \"\");\n      }\n    }\n  });\n  /**\r\n   * Returns `true` if modal is currently open.\r\n   *\r\n   * @return  Modal open?\r\n   */\n\n  Object.defineProperty(Modal.prototype, \"isOpen\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.getPrivate(\"container\").style.display != \"none\";\n    }\n  });\n  /**\r\n   * Opens modal.\r\n   */\n\n  Object.defineProperty(Modal.prototype, \"open\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this.getPrivate(\"container\").style.display = \"block\";\n\n      if (this.get(\"deactivateRoot\")) {\n        this.setTimeout(function () {\n          _this._root._renderer.interactionsEnabled = false;\n        }, 10);\n      }\n\n      this.events.dispatch(\"opened\", {\n        type: \"opened\",\n        target: this\n      });\n    }\n  });\n  /**\r\n   * Closes modal.\r\n   */\n\n  Object.defineProperty(Modal.prototype, \"close\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.getPrivate(\"container\").style.display = \"none\";\n\n      if (this.get(\"deactivateRoot\")) {\n        this._root._renderer.interactionsEnabled = true;\n      }\n\n      this.events.dispatch(\"closed\", {\n        type: \"closed\",\n        target: this\n      });\n    }\n  });\n  /**\r\n   * Closes modal and invokes `cancelled` event.\r\n   */\n\n  Object.defineProperty(Modal.prototype, \"cancel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.getPrivate(\"container\").style.display = \"none\";\n\n      if (this.get(\"deactivateRoot\")) {\n        this._root._renderer.interactionsEnabled = true;\n      }\n\n      this.events.dispatch(\"cancelled\", {\n        type: \"cancelled\",\n        target: this\n      });\n    }\n  });\n  /**\r\n   * Disposes modal.\r\n   */\n\n  Object.defineProperty(Modal.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.dispose.call(this);\n\n      this.root.dom.removeChild(this.getPrivate(\"container\"));\n    }\n  });\n  Object.defineProperty(Modal, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Modal\"\n  });\n  Object.defineProperty(Modal, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Entity.classNames.concat([Modal.className])\n  });\n  return Modal;\n}(Entity);\n\nexport { Modal }; //# sourceMappingURL=Modal.js.map","map":null,"metadata":{},"sourceType":"module"}