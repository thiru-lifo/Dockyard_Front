{"ast":null,"code":"import { __extends, __read } from \"tslib\";\nimport { Scrollbar } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * Creates a scrollbar with chart preview in it.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\r\n * @important\r\n */\n\nvar XYChartScrollbar =\n/** @class */\nfunction (_super) {\n  __extends(XYChartScrollbar, _super);\n\n  function XYChartScrollbar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * An instance of an [[XYChart]] that is used to plot chart preview in\r\n     * scrollbar.\r\n     */\n\n\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(XYChart.new(_this._root, {\n        themeTags: [\"chart\"],\n        interactive: false,\n        interactiveChildren: false,\n        panX: false,\n        panY: false,\n        wheelX: \"none\",\n        wheelY: \"none\"\n      }))\n    });\n    /**\r\n     * A graphics element that is displayed over inactive portion of the\r\n     * scrollbarpreview, to dim it down.\r\n     */\n\n    Object.defineProperty(_this, \"overlay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Graphics.new(_this._root, {\n        themeTags: [\"overlay\"],\n        interactive: false\n      }))\n    });\n    return _this;\n  }\n\n  Object.defineProperty(XYChartScrollbar.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._addOrientationClass();\n\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n      var children = this.children;\n      children.moveValue(this.thumb);\n      children.moveValue(this.startGrip);\n      children.moveValue(this.endGrip);\n      this.thumb.set(\"opacity\", 0);\n      this.thumb.states.create(\"hover\", {\n        opacity: 0.2\n      });\n      var plotContainer = this.chart.plotContainer;\n      plotContainer.set(\"interactive\", false);\n      plotContainer.remove(\"background\");\n      plotContainer.children.removeValue(this.chart.zoomOutButton);\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  Object.defineProperty(XYChartScrollbar.prototype, \"_updateThumb\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._updateThumb.call(this);\n\n      this.overlay.set(\"draw\", function (display) {\n        var _a, _b;\n\n        var startGrip = _this.startGrip;\n        var endGrip = _this.endGrip;\n        var x0 = startGrip.x();\n        var y0 = startGrip.y();\n        var x1 = endGrip.x();\n        var y1 = endGrip.y();\n\n        var h = _this.height();\n\n        var w = _this.width();\n\n        if (x0 > x1) {\n          _a = __read([x1, x0], 2), x0 = _a[0], x1 = _a[1];\n        }\n\n        if (y0 > y1) {\n          _b = __read([y1, y0], 2), y0 = _b[0], y1 = _b[1];\n        }\n\n        if (_this.get(\"orientation\") === \"horizontal\") {\n          display.moveTo(0, 0);\n          display.lineTo(x0, 0);\n          display.lineTo(x0, h);\n          display.lineTo(0, h);\n          display.lineTo(0, 0);\n          display.moveTo(x1, 0);\n          display.lineTo(w, 0);\n          display.lineTo(w, h);\n          display.lineTo(x1, h);\n          display.lineTo(x1, 0);\n        } else {\n          display.moveTo(0, 0);\n          display.lineTo(0, y0);\n          display.lineTo(w, y0);\n          display.lineTo(w, 0);\n          display.lineTo(0, 0);\n          display.moveTo(0, y1);\n          display.lineTo(0, h);\n          display.lineTo(w, h);\n          display.lineTo(w, y1);\n          display.lineTo(0, y1);\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYChartScrollbar, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"XYChartScrollbar\"\n  });\n  Object.defineProperty(XYChartScrollbar, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Scrollbar.classNames.concat([XYChartScrollbar.className])\n  });\n  return XYChartScrollbar;\n}(Scrollbar);\n\nexport { XYChartScrollbar }; //# sourceMappingURL=XYChartScrollbar.js.map","map":null,"metadata":{},"sourceType":"module"}