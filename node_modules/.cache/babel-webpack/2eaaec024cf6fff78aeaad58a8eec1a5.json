{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Settings } from \"../util/Entity\";\nimport { Container } from \"./Container\";\nimport { ListData } from \"../util/Data\";\nimport * as $array from \"../util/Array\";\nimport * as $object from \"../util/Object\";\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\n\nvar DataItem =\n/** @class */\nfunction (_super) {\n  __extends(DataItem, _super);\n\n  function DataItem(component, dataContext, settings) {\n    var _this = _super.call(this, settings) || this;\n    /**\r\n     * A data item's owener [[Component]].\r\n     */\n\n\n    Object.defineProperty(_this, \"component\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A reference to actual item in source data this item is based on.\r\n     */\n\n    Object.defineProperty(_this, \"dataContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * @todo requires description\r\n     */\n\n    Object.defineProperty(_this, \"bullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A set of \"open\" values.\r\n     */\n\n    Object.defineProperty(_this, \"open\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A set of \"close\" values.\r\n     */\n\n    Object.defineProperty(_this, \"close\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    _this.dataContext = dataContext;\n    _this.component = component;\n    _this._settings.visible = true;\n\n    _this._checkDirty();\n\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Object.defineProperty(DataItem.prototype, \"markDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.component.markDirtyValues(this);\n    }\n  });\n  Object.defineProperty(DataItem.prototype, \"_startAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.component._root._addAnimation(this);\n    }\n  });\n  Object.defineProperty(DataItem.prototype, \"_animationTime\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.component._root.animationTime;\n    }\n  });\n  Object.defineProperty(DataItem.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.component) {\n        this.component.disposeDataItem(this);\n      }\n\n      _super.prototype._dispose.call(this);\n    }\n  });\n  /**\r\n   * Shows a data item that's currently hidden.\r\n   */\n\n  Object.defineProperty(DataItem.prototype, \"show\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (duration) {\n      this.setRaw(\"visible\", true);\n\n      if (this.component) {\n        this.component.showDataItem(this, duration);\n      }\n    }\n  });\n  /**\r\n   * Hides a data item that's currently visible.\r\n   */\n\n  Object.defineProperty(DataItem.prototype, \"hide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (duration) {\n      this.setRaw(\"visible\", false);\n\n      if (this.component) {\n        this.component.hideDataItem(this, duration);\n      }\n    }\n  });\n  Object.defineProperty(DataItem.prototype, \"isHidden\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return !this.get(\"visible\");\n    }\n  });\n  return DataItem;\n}(Settings);\n\nexport { DataItem };\n/**\r\n * A base class for elements that make use of data.\r\n */\n\nvar Component =\n/** @class */\nfunction (_super) {\n  __extends(Component, _super);\n\n  function Component() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_data\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListData()\n    });\n    Object.defineProperty(_this, \"_dataItems\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_mainDataItems\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._dataItems\n    });\n    Object.defineProperty(_this, \"valueFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"fields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"id\"]\n    });\n    Object.defineProperty(_this, \"_valueFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_valueFieldsF\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_fields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_fieldsF\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_valuesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_dataChanged\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_dataGrouped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * Indicates if the component has already been initialized.\r\n     */\n\n    Object.defineProperty(_this, \"inited\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Component.prototype, \"data\", {\n    /**\r\n     * @return  Data\r\n     */\n    get: function () {\n      return this._data;\n    },\n\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\n    set: function (data) {\n      data.incrementRef();\n\n      this._data.decrementRef();\n\n      this._data = data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Component.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._dispose.call(this);\n\n      this._data.decrementRef();\n    }\n  });\n  Object.defineProperty(Component.prototype, \"_onDataClear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Component.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._afterNew.call(this);\n\n      this._data.incrementRef();\n\n      this._updateFields();\n\n      this._disposers.push(this.data.events.onAll(function (change) {\n        var dataItems = _this._mainDataItems;\n\n        _this.markDirtyValues();\n\n        _this._markDirtyGroup();\n\n        _this._dataChanged = true;\n\n        if (change.type === \"clear\") {\n          $array.each(dataItems, function (dataItem) {\n            dataItem.dispose();\n          });\n          dataItems.length = 0;\n\n          _this._onDataClear();\n        } else if (change.type === \"push\") {\n          var dataItem = new DataItem(_this, change.newValue, _this._makeDataItem(change.newValue));\n          dataItems.push(dataItem);\n\n          _this.processDataItem(dataItem);\n        } else if (change.type === \"setIndex\") {\n          var dataItem_1 = dataItems[change.index];\n\n          var properties_1 = _this._makeDataItem(change.newValue);\n\n          $object.keys(properties_1).forEach(function (key) {\n            dataItem_1.animate({\n              key: key,\n              to: properties_1[key],\n              duration: _this.get(\"interpolationDuration\", 0),\n              easing: _this.get(\"interpolationEasing\")\n            });\n          });\n          dataItem_1.dataContext = change.newValue;\n        } else if (change.type === \"insertIndex\") {\n          var dataItem = new DataItem(_this, change.newValue, _this._makeDataItem(change.newValue));\n          dataItems.splice(change.index, 0, dataItem);\n\n          _this.processDataItem(dataItem);\n        } else if (change.type === \"removeIndex\") {\n          var dataItem = dataItems[change.index];\n          dataItem.dispose();\n          dataItems.splice(change.index, 1);\n        } else if (change.type === \"moveIndex\") {\n          var dataItem = dataItems[change.oldIndex];\n          dataItems.splice(change.oldIndex, 1);\n          dataItems.splice(change.newIndex, 0, dataItem);\n        } else {\n          throw new Error(\"Unknown IStreamEvent type\");\n        }\n\n        _this._afterDataChange();\n      }));\n    }\n  });\n  Object.defineProperty(Component.prototype, \"_updateFields\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      if (this.valueFields) {\n        this._valueFields = [];\n        this._valueFieldsF = {};\n        $array.each(this.valueFields, function (key) {\n          var field = _this.get(key + \"Field\");\n\n          if (field) {\n            _this._valueFields.push(key);\n\n            _this._valueFieldsF[key] = {\n              fieldKey: key + \"Field\",\n              workingKey: key + \"Working\"\n            };\n          }\n        });\n      }\n\n      if (this.fields) {\n        this._fields = [];\n        this._fieldsF = {};\n        $array.each(this.fields, function (key) {\n          var field = _this.get(key + \"Field\");\n\n          if (field) {\n            _this._fields.push(key);\n\n            _this._fieldsF[key] = key + \"Field\";\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(Component.prototype, \"dataItems\", {\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\n    get: function () {\n      return this._dataItems;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Component.prototype, \"processDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  Object.defineProperty(Component.prototype, \"_makeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (data) {\n      var _this = this; //const output: this[\"_dataItemSettings\"] = {};\n\n\n      var output = {}; // temporary to solve error\n\n      if (this._valueFields) {\n        $array.each(this._valueFields, function (key) {\n          var field = _this.get(_this._valueFieldsF[key].fieldKey);\n\n          output[key] = data[field];\n          output[_this._valueFieldsF[key].workingKey] = output[key];\n        });\n      }\n\n      if (this._fields) {\n        $array.each(this._fields, function (key) {\n          var field = _this.get(_this._fieldsF[key]);\n\n          output[key] = data[field];\n        });\n      }\n\n      return output;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Component.prototype, \"makeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (data) {\n      var dataItem = new DataItem(this, undefined, data);\n      this.processDataItem(dataItem);\n      return dataItem;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Component.prototype, \"pushDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (data) {\n      var dataItem = this.makeDataItem(data);\n\n      this._mainDataItems.push(dataItem);\n\n      return dataItem;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Component.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  /**\r\n   * Shows component's data item.\r\n   *\r\n   * @param   dataItem   Data item\r\n   * @param   _duration  Animation duration in milliseconds\r\n   * @return             Promise\r\n   */\n\n  Object.defineProperty(Component.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, _duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          dataItem.set(\"visible\", true);\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides component's data item.\r\n   *\r\n   * @param   dataItem   Data item\r\n   * @param   _duration  Animation duration in milliseconds\r\n   * @return             Promise\r\n   */\n\n  Object.defineProperty(Component.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, _duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          dataItem.set(\"visible\", false);\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    }\n  });\n  Object.defineProperty(Component.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._clearDirty.call(this);\n\n      this._valuesDirty = false;\n    }\n  });\n  Object.defineProperty(Component.prototype, \"_afterDataChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Component.prototype, \"_afterChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterChanged.call(this);\n\n      if (this._dataChanged) {\n        var type = \"datavalidated\";\n\n        if (this.events.isEnabled(type)) {\n          this.events.dispatch(type, {\n            type: type,\n            target: this\n          });\n        }\n\n        this._dataChanged = false;\n      }\n\n      this.inited = true;\n    }\n  });\n  /**\r\n   * Forces a repaint of the element which relies on data.\r\n   *\r\n   * @since 5.0.21\r\n   */\n\n  Object.defineProperty(Component.prototype, \"markDirtyValues\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {\n      this.markDirty();\n      this._valuesDirty = true;\n    }\n  });\n  Object.defineProperty(Component.prototype, \"_markDirtyGroup\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._dataGrouped = false;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Component.prototype, \"markDirtySize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._sizeDirty = true;\n      this.markDirty();\n    }\n  });\n  Object.defineProperty(Component, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Component\"\n  });\n  Object.defineProperty(Component, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([Component.className])\n  });\n  return Component;\n}(Container);\n\nexport { Component }; //# sourceMappingURL=Component.js.map","map":null,"metadata":{},"sourceType":"module"}