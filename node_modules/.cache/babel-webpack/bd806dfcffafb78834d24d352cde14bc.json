{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\n/**\r\n * A candle element used in a [[CandlestickSeries]].\r\n */\n\nvar Candlestick =\n/** @class */\nfunction (_super) {\n  __extends(Candlestick, _super);\n\n  function Candlestick() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Candlestick.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n        this._clear = true;\n      }\n    }\n  });\n  Object.defineProperty(Candlestick.prototype, \"_draw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._draw.call(this);\n\n      var display = this._display;\n      display.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n      display.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n      display.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n      display.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n    }\n  });\n  Object.defineProperty(Candlestick, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Candlestick\"\n  });\n  Object.defineProperty(Candlestick, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: RoundedRectangle.classNames.concat([Candlestick.className])\n  });\n  return Candlestick;\n}(RoundedRectangle);\n\nexport { Candlestick }; //# sourceMappingURL=Candlestick.js.map","map":null,"metadata":{},"sourceType":"module"}