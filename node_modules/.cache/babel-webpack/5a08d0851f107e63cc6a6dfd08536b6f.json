{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Entity } from \"./Entity\";\nimport { Color } from \"./Color\";\nimport * as $type from \"./Type\";\nimport * as $object from \"./Object\";\nimport * as $array from \"./Array\";\n/**\r\n * A tool that can process the data before it is being used in charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n * @important\r\n */\n\nvar DataProcessor =\n/** @class */\nfunction (_super) {\n  __extends(DataProcessor, _super);\n\n  function DataProcessor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_checkDates\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_checkNumbers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_checkColors\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_checkEmpty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_checkDeep\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    return _this;\n  }\n\n  Object.defineProperty(DataProcessor.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._afterNew.call(this);\n\n      this._checkFeatures();\n\n      this.on(\"dateFields\", function () {\n        return _this._checkFeatures();\n      });\n      this.on(\"dateFormat\", function () {\n        return _this._checkFeatures();\n      });\n      this.on(\"numericFields\", function () {\n        return _this._checkFeatures();\n      });\n      this.on(\"colorFields\", function () {\n        return _this._checkFeatures();\n      });\n      this.on(\"emptyAs\", function () {\n        return _this._checkFeatures();\n      });\n    }\n  });\n  Object.defineProperty(DataProcessor.prototype, \"_checkFeatures\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.isDirty(\"dateFields\") || this.isDirty(\"dateFormat\")) {\n        this._checkDates = this.get(\"dateFields\") && this.get(\"dateFields\").length > 0;\n      }\n\n      if (this.isDirty(\"numericFields\")) {\n        this._checkNumbers = this.get(\"numericFields\") && this.get(\"numericFields\").length > 0;\n      }\n\n      if (this.isDirty(\"colorFields\")) {\n        this._checkColors = this.get(\"colorFields\") && this.get(\"colorFields\").length > 0;\n      }\n\n      if (this.isDirty(\"emptyAs\")) {\n        this._checkEmpty = this.get(\"emptyAs\") != null;\n      }\n\n      this._checkDeepFeatures();\n    }\n  });\n  Object.defineProperty(DataProcessor.prototype, \"_checkDeepFeatures\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      var deepFields = [];\n      $array.each([\"dateFields\", \"numericFields\", \"colorFields\"], function (where) {\n        $array.each(_this.get(where, []), function (field) {\n          var steps = field.split(\".\");\n          steps.pop();\n\n          while (steps.length > 0) {\n            deepFields.push(steps.join(\".\"));\n            steps.pop();\n          }\n        });\n      });\n      this._checkDeep = deepFields.length > 0;\n      this.setPrivate(\"deepFields\", deepFields);\n    }\n  });\n  /**\r\n   * Processess entire array of data.\r\n   *\r\n   * NOTE: calling this will modify original array!\r\n   */\n\n  Object.defineProperty(DataProcessor.prototype, \"processMany\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (data) {\n      var _this = this;\n\n      if ($type.isArray(data) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty)) {\n        $array.each(data, function (row) {\n          _this.processRow(row);\n        });\n      }\n    }\n  });\n  /**\r\n   * Processes a row (object) of data.\r\n   *\r\n   * NOTE: calling this will modify values of the original object!\r\n   */\n\n  Object.defineProperty(DataProcessor.prototype, \"processRow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (row, prefix) {\n      var _this = this;\n\n      if (prefix === void 0) {\n        prefix = \"\";\n      }\n\n      $object.each(row, function (key, _value) {\n        var lookupKey = prefix + key;\n\n        if (_this._checkEmpty) {\n          row[key] = _this._maybeToEmpty(row[key]);\n        }\n\n        if (_this._checkNumbers) {\n          row[key] = _this._maybeToNumber(lookupKey, row[key]);\n        }\n\n        if (_this._checkDates) {\n          row[key] = _this._maybeToDate(lookupKey, row[key]);\n        }\n\n        if (_this._checkColors) {\n          row[key] = _this._maybeToColor(lookupKey, row[key]);\n        }\n\n        if (_this._checkDeep && _this.getPrivate(\"deepFields\", []).indexOf(lookupKey) !== -1 && $type.isObject(row[key])) {\n          _this.processRow(row[key], lookupKey + \".\");\n        }\n      });\n    }\n  });\n  Object.defineProperty(DataProcessor.prototype, \"_maybeToNumber\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (field, value) {\n      if (this.get(\"numericFields\").indexOf(field) !== -1) {\n        return $type.toNumber(value);\n      }\n\n      return value;\n    }\n  });\n  Object.defineProperty(DataProcessor.prototype, \"_maybeToDate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (field, value) {\n      if (this.get(\"dateFields\").indexOf(field) !== -1) {\n        return this._root.dateFormatter.parse(value, this.get(\"dateFormat\", \"\")).getTime();\n      }\n\n      return value;\n    }\n  });\n  Object.defineProperty(DataProcessor.prototype, \"_maybeToEmpty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      if ((value == null || value == \"\") && this.get(\"emptyAs\") != null) {\n        return this.get(\"emptyAs\");\n      }\n\n      return value;\n    }\n  });\n  Object.defineProperty(DataProcessor.prototype, \"_maybeToColor\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (field, value) {\n      if (this.get(\"colorFields\").indexOf(field) !== -1) {\n        return Color.fromAny(value);\n      }\n\n      return value;\n    }\n  });\n  return DataProcessor;\n}(Entity);\n\nexport { DataProcessor }; //# sourceMappingURL=DataProcessor.js.map","map":null,"metadata":{},"sourceType":"module"}