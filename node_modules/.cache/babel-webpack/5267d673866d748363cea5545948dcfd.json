{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { List } from \"./List\";\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\n\nvar ListData =\n/** @class */\nfunction (_super) {\n  __extends(ListData, _super);\n\n  function ListData() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * An optional processor for data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n     */\n\n\n    Object.defineProperty(_this, \"processor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Object.defineProperty(ListData.prototype, \"incrementRef\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(ListData.prototype, \"decrementRef\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(ListData.prototype, \"_onPush\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (newValue) {\n      if (this.processor) {\n        this.processor.processRow(newValue); //console.log(newValue)\n      }\n\n      _super.prototype._onPush.call(this, newValue);\n    }\n  });\n  Object.defineProperty(ListData.prototype, \"_onInsertIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (index, newValue) {\n      if (this.processor) {\n        this.processor.processRow(newValue);\n      }\n\n      _super.prototype._onInsertIndex.call(this, index, newValue);\n    }\n  });\n  Object.defineProperty(ListData.prototype, \"_onSetIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (index, oldValue, newValue) {\n      if (this.processor) {\n        this.processor.processRow(newValue);\n      }\n\n      _super.prototype._onSetIndex.call(this, index, oldValue, newValue);\n    }\n  });\n  return ListData;\n}(List);\n\nexport { ListData };\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\n\nvar JsonData =\n/** @class */\nfunction () {\n  function JsonData(value) {\n    Object.defineProperty(this, \"processor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_value\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._value = value;\n  }\n\n  Object.defineProperty(JsonData.prototype, \"incrementRef\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(JsonData.prototype, \"decrementRef\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  return JsonData;\n}();\n\nexport { JsonData }; //# sourceMappingURL=Data.js.map","map":null,"metadata":{},"sourceType":"module"}