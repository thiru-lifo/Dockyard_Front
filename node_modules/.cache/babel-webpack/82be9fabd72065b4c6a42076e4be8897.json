{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Entity } from \"../../core/util/Entity\";\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\n\nvar Bullet =\n/** @class */\nfunction (_super) {\n  __extends(Bullet, _super);\n\n  function Bullet() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // used by MapPolygons where one data item can have multiple bullets of the same kind\n\n\n    Object.defineProperty(_this, \"_index\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * Target series object if it's a bullet for series.\r\n     */\n\n    Object.defineProperty(_this, \"series\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Bullet.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      // Applying themes because bullet will not have parent\n      _super.prototype._afterNewApplyThemes.call(this);\n    }\n  });\n  Object.defineProperty(Bullet.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isDirty(\"sprite\")) {\n        var sprite = this.get(\"sprite\");\n\n        if (sprite) {\n          sprite.setAll({\n            position: \"absolute\",\n            role: \"figure\"\n          });\n\n          this._disposers.push(sprite);\n        }\n      }\n\n      if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\n        if (this.series) {\n          this.series._positionBullet(this);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Bullet, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Bullet\"\n  });\n  Object.defineProperty(Bullet, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Entity.classNames.concat([Bullet.className])\n  });\n  return Bullet;\n}(Entity);\n\nexport { Bullet }; //# sourceMappingURL=Bullet.js.map","map":null,"metadata":{},"sourceType":"module"}