{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"./Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * Draws a Star.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\n\nvar Star =\n/** @class */\nfunction (_super) {\n  __extends(Star, _super);\n\n  function Star() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Star.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"spikes\")) {\n        this._clear = true;\n      }\n    }\n  });\n  Object.defineProperty(Star.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n\n      if (this._clear) {\n        var display = this._display;\n        var r = this.get(\"radius\", 0);\n        var ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\n        var spikes = this.get(\"spikes\", 0);\n        var step = Math.PI / spikes;\n        var angle = Math.PI / 2 * 3;\n        display.moveTo(0, -r);\n\n        for (var i = 0; i < spikes; i++) {\n          display.lineTo(Math.cos(angle) * r, Math.sin(angle) * r);\n          angle += step;\n          display.lineTo(Math.cos(angle) * ir, Math.sin(angle) * ir);\n          angle += step;\n        }\n\n        display.lineTo(0, -r);\n        display.closePath();\n      }\n    }\n  });\n  Object.defineProperty(Star, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Star\"\n  });\n  Object.defineProperty(Star, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([Star.className])\n  });\n  return Star;\n}(Graphics);\n\nexport { Star }; //# sourceMappingURL=Star.js.map","map":null,"metadata":{},"sourceType":"module"}